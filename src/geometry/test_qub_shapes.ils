(qtest:::runSuites
	(qtest:::TestSuite ((f qub:::makeOctagon))
		(qtest:::TestCase basic_creation
			(qtest:::assertIsInstance (f 10) 'qub:::Octagon))
		(qtest:::TestCase check_length
			(qtest:::assertEqual 10 (get_side_length (f 10))))
		(qtest:::TestCase check_actually_octagon
			(qtest:::assertEqual 8 (get_num_sides (f 10)))))
	; Check polygon equality
	(qtest:::TestSuite ((f qub:::equal) (mk qub:::makeOctagon))
		(qtest:::TestCase check_octagons
			(qtest:::assertTrue (f (mk 10) (mk 10))))
		(qtest:::TestCase different_sides
			(qtest:::assertNil (f (mk 10) 
														(makeInstance 'qub:::RegularPolygon 
																					?num_sides 10 
																					?side_length 10))))
		(qtest:::TestCase different_lengths
			(qtest:::assertNil (f (mk 10) (mk 20)))))
	; Perimeter										
	(qtest:::TestSuite ((f qub:::perimeter) (mk qub:::makeOctagon))
		(qtest:::TestCase simple_summation
			(qtest:::assertEqual 80 (f (mk 10)))))
	; Circumradius
	(qtest:::TestSuite ((f qub:::circumradius) (mk qub:::makeRegularPolygon))
		; Comparison values taken from here
		; http://www.cleavebooks.co.uk/scol/caltriag.htm
		(qtest:::TestCase ten_triangle
			(qtest:::assertAlmostEqual 5.77 (f (mk 3 10)) ?rel_tol 10m)))
	; Area
	(qtest:::TestSuite ((f qub:::area) (mk qub:::makeRegularPolygon))
		; Square for simplicity
		(qtest:::TestCase square_area
			(qtest:::assertAlmostEqual 100.0 (f (mk 4 10)) ?rel_tol 1p))))
	; Apothem
;	(qtest:::TestSuite ((f qub::apothem) (mk qub:::makeRegularPolygon)))
			
		
	

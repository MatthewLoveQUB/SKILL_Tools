(define qub '(nil))

(defmacro defunqub  (fn_name args @rest body)
	`(let ((,fn_name (lambda ,args ,@body)))
		(putprop qub ,fn_name (quote ,fn_name))))

(defunqub filter (f lst)
	(let ((result nil))
		(foreach x lst
			(when (f x)
				(pushf x result)))
		(reverse result)))


(defunqub foldl (fn init lst)
	(let ((result init))
		(foreach value lst
			(setq result (fn result value)))
		result))

(defunqub foldr (fn init lst)
	,(qub->foldl ,fn ,init ,(reverse lst)))

(display (qub->foldl plus 0 '(1 2 3 7)))
(display (qub->foldr plus 0 '(1 2 3 7)))
